const styles = StyleSheet.create({
    flatlist: {
        padding: SPACING,
        paddingTop: StatusBar.currentHeight
    },
    imageView: {
        flexDirection: 'row',
        padding: SPACING,
        backgroundColor: 'grey',
        borderRadius: 12,
        marginBottom: SPACING,
        shadowColor: '#000',
        shadowOffset: {
            width: 0,
            height: 10
        },
        shadowOpacity: 1,
        shadowRadius: 20
    },
    image: {
        width: AVATAR_SIZE,
        height: AVATAR_SIZE,
        borderRadius: AVATAR_SIZE,
        marginRight: SPACING/2
    },
    root: {
        flex: 1,
        backgroundColor: '#fff'
    },
    title: {
        fontSize: 18,
        fontWeight: '700'
    },
    subtitle: {
        fontSize: 14,
        opacity: .7
    },
    description: {
        fontSize: 10,
        opacity: .8,
        color: '#0099cc'
    }
})



<Animated.View style={[styles.imageView, {opacity, transform: [{scale}]}]}>
                <Image
                    source={{
                        uri: 'https://loremflickr.com/cache/resized/65535_52440891686_c2b21da412_c_640_480_nofilter.jpg'
                    }}
                    style={styles.image}
                    />
                    <View style={styles.details}>
                        <Text style={styles.title}>{item.name}</Text>
                        <Text style={styles.subtitle}>{item.email}</Text>
                        <Text style={styles.description}>{item.jobTitle}</Text>
                        <Text style={styles.description}>{item.purpose}</Text>
                    </View>
            </Animated.View>



=====================================================================================


import { Button, Image, ScrollView, StyleSheet, Text, TouchableOpacity, View } from 'react-native'
import React, { useState } from 'react'
import KeyboardAvoidingWrapper from './KeyboardAvoidingWrapper'
import { Dropdown } from 'react-native-element-dropdown';
import { Entypo } from '@expo/vector-icons';
import Input from './Input';

//formik
import { Formik } from "formik";

//icons
import {Octicons,Ionicons, Fontisto} from '@expo/vector-icons';


import {
    StyledContainer,
    InnerContrainer,
    PageTitle,
    StyledFormArea,
    LeftIcon, 
    StyledInputLabel,
    StyledTextInput,
    StyledTextInput1,
    RightIcon,
    StyleButton,
    ButtonText,
    Colors,
    Line,
    MsgBox,
    ExtraText,
    ExtraView,
    TextLink,
    TextLinkContent
}from '../componenets/styles';

const SPACING = 20
const AVATAR_SIZE = 70;
const BUTTON_CONTAINER_SIZE = 38
const ITEM_SIZE = AVATAR_SIZE + BUTTON_CONTAINER_SIZE + SPACING * 6 + 5
const stage = 'approved'

const item = {
  name: 'Author Morgan',
  email: 'authorm@gmail.com',
  jobTitle: 'Operations Specialist',
  purpose: 'for fun'
}

const LoanRequest = () => {
  
  const [value1, setValue1] = useState('');

  const typeData = [
    {key: '1', value: 'Loan'},
    {key: '2', value: 'Lease'},
  ]

  const [selected, setSelected] = React.useState("");
  
  const data = [
    { label: 'Loan', value: 'Loan' },
    { label: 'Lease', value: 'Lease' },
  ];

    const [value, setValue] = useState(null);
    const [isFocus, setIsFocus] = useState(false);

    const renderLabel = () => {
      if (value || isFocus) {
        return (
          <Text style={[styles.label, isFocus && { color: '#00b300' }]}>
            Dropdown label
          </Text>
        );
      }
      return null;
    };

  return (
    <ScrollView style={styles.container}>

        <View style={styles.imageView}>
            <View style={styles.detailsContainer}>
                <Image
                    source={{
                        uri: 'https://loremflickr.com/cache/resized/65535_52440891686_c2b21da412_c_640_480_nofilter.jpg'
                    }}
                    style={styles.image}
                    />
                    <View style={styles.details}>
                            <Text style={styles.title}>{item.name}</Text>
                        <Text style={styles.subtitle}>{item.email}</Text>
                        <Text style={styles.description}>{item.jobTitle}</Text>
                        <Text style={styles.description}>{item.purpose}</Text>
                    </View>
            </View>
        </View>
      <View style={styles.form}>
        <View style={styles.calButtonView}>
          <TouchableOpacity style={styles.calButton}>
              <Text style={styles.btntext}>Loan/Lease Calculator</Text>
          </TouchableOpacity>
        </View>
        <View>

          <View style={styles.container1}>
              {renderLabel()}
              <Dropdown
                style={[styles.dropdown, isFocus && { borderColor: '#00b300' }]}
                placeholderStyle={styles.placeholderStyle}
                selectedTextStyle={styles.selectedTextStyle}
                inputSearchStyle={styles.inputSearchStyle}
                iconStyle={styles.iconStyle}
                data={data}
                search
                maxHeight={300}
                labelField="label"
                valueField="value"
                placeholder={!isFocus ? 'Select item' : '...'}
                searchPlaceholder="Search..."
                value={value}
                onFocus={() => setIsFocus(true)}
                onBlur={() => setIsFocus(false)}
                onChange={item => {
                  setValue(item.value);
                  setIsFocus(false);
                }}
                renderLeftIcon={() => (
                  <Entypo name='shop' size={24} color='black' style={{ marginHorizontal: 10 }} />
                )}
              />
            </View>
            <View style={styles.container}>

                    <View >
                    <TextInput 
                            label= "User Name"
                            icon= "person"
                            placeholder="Name"
                            placeholderTextColor={Colors.darkLight}   
                            // onChangeText={handleChange('userName')}
                            // onBlur={handleBlur('userName')}
                            value={value1.userName}
                        />

                        <TextInput 
                            label= "Email address"
                            icon= "mail"
                            placeholder="abc@gmail.com"
                            placeholderTextColor={Colors.darkLight}   
                            // onChangeText={handleChange('email')}
                            // onBlur={handleBlur('email')}
                            value={value1.email}
                            keyboardTypes="email-address"
                        />
                    </View>


            </View>
        </View>

      </View>

    </ScrollView>
  )
}

export default LoanRequest

const TextInput = ({label, icon, isPassword,hidePassword,setHidePassword, ...props}) =>{
  return (
      <View>
          <LeftIcon>
              <Octicons name={icon} size={30} color={Colors.brand}/>
          </LeftIcon>
          
          <StyledInputLabel>{label}</StyledInputLabel>
  
          <StyledTextInput1 {...props} />
          {isPassword && (
                  <RightIcon onPress={() => setHidePassword(!hidePassword)}>
                      <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye' }size={30} color={darkLight} />
                  </RightIcon>
          )}
      </View>
  )
}

const styles = StyleSheet.create({
  detailsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-evenly',
    marginBottom: SPACING/2,
    
  },
  container: {
    backgroundColor: '#E3E9E2'
  },
  form: {
    opacity: 5,
    backgroundColor: '#F2F2F2',
    padding: 20,
  },
  imageView: {
    padding: SPACING,
    marginTop: 30,
    backgroundColor: 'rgba(255, 255, 255, 0.0)',
    borderRadius: 12,
    marginBottom: SPACING,
    shadowColor: 'black',
    shadowOffset: {
        width: 0,
        height: 10
    },
    shadowOpacity: 1,
    shadowRadius: 20,
},
statusBar: {
    flexDirection: 'row'
},
  image: {
      width: 120,
      height: 120,
      borderRadius: AVATAR_SIZE,
      backgroundColor: 'red',
      marginEnd: 20
  },
  calButtonView: {
    flexDirection: 'row',
    justifyContent: "flex-end",
    marginBottom: 15
  },
  calButton: {
    backgroundColor: '#8A938F',
    padding: 8,
    paddingHorizontal: 20,
    borderRadius: 20,
    marginEnd: 20,
  },
  btntext: {
    color: '#ffff',
    fontWeight: 'bold',
  },
  root: {
      flex: 1,
      backgroundColor: '#fff'
  },
  title: {
      fontSize: 18,
      fontWeight: '700',
      maxWidth: '70%',
      marginBottom: 5
  },
  subtitle: {
      fontSize: 14,
      opacity: .7
  },
  description: {
      fontSize: 12,
      opacity: .8,
      color: '#0099cc'
  },
  details: {
      flexShrink: 1,
      width: 200
  },
  container1: {
    backgroundColor: 'white',
    padding: 16,
    borderRadius: 10
  },
  dropdown: {
    height: 50,
    borderColor: 'gray',
    borderWidth: 0.5,
    borderRadius: 8,
    paddingHorizontal: 8,
  },
  icon: {
    marginRight: 5,
  },
  label: {
    position: 'absolute',
    backgroundColor: 'white',
    left: 22,
    top: 8,
    zIndex: 999,
    paddingHorizontal: 8,
    fontSize: 14,
  },
  placeholderStyle: {
    fontSize: 16,
  },
  selectedTextStyle: {
    fontSize: 16,
  },
  iconStyle: {
    width: 20,
    height: 20,
  },
  inputSearchStyle: {
    height: 40,
    fontSize: 16,
  },
  input: {
    height: 55,
    paddingHorizontal: 12,
    borderRadius: 8,
    borderWidth: 0.5,
    borderColor: '#DDDDDD',
  },
  inputStyle: { fontSize: 16 },
  labelStyle: {
    fontSize: 14,
    position: 'absolute',
    top: -10,
    backgroundColor: 'white',
    paddingHorizontal: 4,
    marginLeft: -4,
  },
  placeholderStyle: { fontSize: 16 },
  textErrorStyle: { fontSize: 16 },
})